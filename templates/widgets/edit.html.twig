<!-- Modal -->
<div class="modal fade" id="widget_details" aria-hidden="true">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <form id="create-widget-form">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalLabel">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label for="name">Name</label>
                                <input type="text" class="form-control" id="name" name="name">
                            </div>
                            <div class="form-group col-md-6">
                                <label for="wtype">Diagram Type</label>
                                <select name="wtype" class="form-control" id="wtype">
                                    <option value="distribution">Distribution</option>
                                    <option value="time_series">Time Series</option>
                                    <option value="plane">Plane</option>
                                </select>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group col-md-12">
                                <label for="widget">Content</label>
                                <div id="jsoneditor"></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-info" id="create-widget" disabled="disabled">Add new widget</button>
                </div>
            </form>
        </div>
    </div>
</div>


<link href="/plugins/jsoneditor/jsoneditor.min.css" rel="stylesheet" type="text/css">
<script src="/plugins/jsoneditor/jsoneditor.min.js"></script>
<script src="/js/widgets/default_json.js"></script>

<script>

    function getSchema( schemaType ) {
        requestAJAX.get("/widget/schema/"+schemaType)
            .done(function(response){
                console.log(response);
                appData.jsonEditor.setSchema(JSON.parse(response));
            });
    }

    $("#wtype").on("change", function(){
        var wtype = $(this, " option:selected").val();
        console.log(wtype);
        /*requestAJAX.get("/widget/schema/"+wtype)
            .done(function(response){
                console.log(response);
                appData.jsonEditor.setSchema(JSON.parse(response));
            });*/
        getSchema(wtype);
    });

    getSchema($("#wtype option:selected").val());

    /*var defaultSchema = {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "title": "Single Element Time Series Widget",
        "description": "Object containing time series widget details",
        "definitions": {
            "segment": {
                "type": "object",
                "properties": {
                    "presentation": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "title": "Segment Name",
                                "minLength": 1
                            },
                            "color": {
                                "type": "string",
                                "title": "Segment Color"
                            },
                            "type": {
                                "enum": ["bar"],
                            }
                        },
                        "required": ["name"],
                    },
                    "data_requirements": {
                        "type": "object",
                        "properties": {
                            "filters": {
                                "type": "object",
                                "properties": {
                                    "device_type": {
                                        "type": "object",
                                        "properties": {
                                            "search_value": {
                                                "enum": [1, 2, 3, 4],
                                                "type": "integer"
                                            },
                                            "condition": {
                                                "enum": ["is"]
                                            }
                                        }
                                    }
                                }
                            },
                            "technical_metrics": {
                                "type": "object",
                                "properties": {
                                    "total_img_size": {
                                        "type": "object",
                                        "properties": {
                                            "data_flavor": {
                                                "type": "object",
                                                "properties": {
                                                    "percentile": {
                                                        "title": "Some test title",
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "type": "object",
        "properties": {
            "title": {
                "type": "string",
                "minLength": 1
            },
            "global": {
                "type": "object",
                "properties": {
                    "presentation": {
                        "title": "Presentation part",
                        "type": "object",
                        "properties": {
                            "render_type": {
                                "title": "Widget Type",
                                "enum": ["time_series", "plane", "distribution"]
                            },
                            "layout" : {
                                "title": "Layout",
                                "type": "object",
                                "properties": {
                                    "bargap": {
                                        "description": "Bargap",
                                        "type": "integer",
                                        "minimum": 0
                                    },
                                    "barmode": {
                                        "enum": ["overlay"]
                                    }
                                }
                            }
                        }
                    },
                    "data_requirements": {
                        "type": "object",
                        "properties": {
                            "period": {
                               "type": "object",
                                "properties": {
                                    "type": {
                                        "title": "Type",
                                        "enum": ["moving"]
                                    },
                                    "start": {
                                        "title": "Start",
                                        "enum": [30, 130],
                                    },
                                    "end": {
                                        "Title": "End Date",
                                        "enum": ["now"]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "segments": {
                "type": "object",
                "properties": {
                    "1": {"$ref": "#/definitions/segment"}
                }
            }
        },
        "required": ["title"]
    };*/



    const options = {
        // schema: defaultSchema,
        mode: 'tree',
        modes: ['code', 'text', 'tree', 'preview'],

        onValidationError: function(errors) {
            $("#create-widget").prop("disabled", true);
            if ( errors.length == 0 )
            {
                $("#create-widget").prop("disabled", false);
            }
        },
    }


    const container = document.getElementById('jsoneditor');
    appData.jsonEditor = new JSONEditor(container, options, defaultJson);

    // Once loaded append modal div to body in order to appear above dark background
    $(function(){
        $('body').append($(appData.itemDetailsModalId));
    });

    function validationInit()
    {
        if ( appData.validator )
        {
            appData.validator.destroy();
        }

        appData.validator = $(appData.modalFormId).validate({
            rules: {
                name: "required",
            },
            submitHandler: function(form) {

                var formData = $(appData.modalFormId).serialize();
                if ( appData.mode == 'edit' )
                {
                    itemActions.saveItem(appData.modalFormId, true);
                }
                else if ( appData.mode == 'add' )
                {
                    itemActions.createItem();
                }
            }
        });
    }

    // Need this to prevent double modals on same page.
    // Unload page - unload modal
    $('.ajax-link').on('click', function(){
        $(appData.itemDetailsModalId).remove();
    });
</script>